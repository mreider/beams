apiVersion: v1
kind: ServiceAccount
metadata:
  name: randomizer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: modify-pods
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: modify-pods-to-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: modify-pods
subjects:
- kind: ServiceAccount
  name: randomizer
---
apiVersion: v1
kind: Service
metadata:
  name: calculations
spec:
  ports:
  - name: api
    port: 3000
    targetPort: 3000
  selector:
    app: calculations
---
apiVersion: v1
kind: Service
metadata:
  name: confirmations
spec:
  ports:
  - name: api
    port: 3000
    targetPort: 3000
  selector:
    app: confirmations
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: mongo
  name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app.kubernetes.io/name: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: resolutions
spec:
  ports:
  - name: api
    port: 3000
    targetPort: 3000
  selector:
    app: resolutions
---
apiVersion: v1
kind: Service
metadata:
  name: transactions
spec:
  ports:
  - name: api
    port: 3000
    targetPort: 3000
  selector:
    app: transactions
---
apiVersion: scheduling.k8s.io/v1
globalDefault: false
kind: PriorityClass
metadata:
  name: high-priority
value: 1
---
apiVersion: scheduling.k8s.io/v1
globalDefault: true
kind: PriorityClass
metadata:
  name: low-priority
value: 1000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: calculations
  name: calculations
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calculations
  template:
    metadata:
      labels:
        app: calculations
    spec:
      containers:
      - command:
        - node
        - --require
        - .\opentelemetry.js
        - calculationServer.js
        image: ghcr.io/mreider/beams:125
        name: calculations
        ports:
        - containerPort: 3000
          name: calculations
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 32Mi
      priorityClassName: high-priority
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: confirmations
  name: confirmations
spec:
  replicas: 1
  selector:
    matchLabels:
      app: confirmations
  template:
    metadata:
      labels:
        app: confirmations
    spec:
      containers:
      - command:
        - node
        - --require
        - .\opentelemetry.js
        - confirmationServer.js
        env:
        - name: API-URL
          value: dynatrace api url
        - name: API-TOKEN
          value: dynatrace token
        image: ghcr.io/mreider/beams:125
        name: confirmations
        ports:
        - containerPort: 3000
          name: confirmations
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - command:
        - node
        - --require
        - .\opentelemetry.js
        - frontEndServer.js
        env:
        - name: API-URL
          value: dynatrace api url
        - name: API-TOKEN
          value: dynatrace token
        image: ghcr.io/mreider/beams:125
        name: frontend
        ports:
        - containerPort: 3000
          name: frontend
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: backend
    app.kubernetes.io/name: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/name: mongo
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backend
        app.kubernetes.io/name: mongo
    spec:
      containers:
      - args:
        - --bind_ip
        - 0.0.0.0
        image: mongo:4.2
        name: mongo
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: resolutions
  name: resolutions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resolutions
  template:
    metadata:
      labels:
        app: resolutions
    spec:
      containers:
      - command:
        - node
        - --require
        - .\opentelemetry.js
        - resolutionServer.js
        env:
        - name: API-URL
          value: dynatrace api url
        - name: API-TOKEN
          value: dynatrace token
        image: ghcr.io/mreider/beams:125
        name: resolutions
        ports:
        - containerPort: 3000
          name: resolutions
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: transactions
  name: transactions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transactions
  template:
    metadata:
      labels:
        app: transactions
    spec:
      containers:
      - command:
        - node
        - --require
        - .\opentelemetry.js
        - transactionServer.js
        env:
        - name: API-URL
          value: dynatrace api url
        - name: API-TOKEN
          value: dynatrace token
        image: ghcr.io/mreider/beams:125
        name: transactions
        ports:
        - containerPort: 3000
          name: transactions
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 32Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: randomizer
spec:
  containers:
  - command:
    - node
    - --require
    - .\opentelemetry.js
    - randomizer.js
    image: ghcr.io/mreider/beams:125
    name: randomizer
    resources:
      limits:
        cpu: 100m
        memory: 64Mi
      requests:
        cpu: 100m
        memory: 32Mi
  serviceAccountName: randomizer
